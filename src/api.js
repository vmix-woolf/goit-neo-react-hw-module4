import axios from 'axios'

// üîπ –¢–≤—ñ–π Access Key –∑ Unsplash (–∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —Å–≤—ñ–π)
const ACCESS_KEY = import.meta.env.VITE_UNSPLASH_ACCESS_KEY

// –ë–∞–∑–æ–≤–∏–π URL Unsplash
const BASE_URL = 'https://api.unsplash.com'

const unsplashApi = axios.create({ baseURL: BASE_URL })

/**
 * –ü–æ—à—É–∫ –∑–æ–±—Ä–∞–∂–µ–Ω—å
 * @param {string} query - –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ
 * @param {number} page - —Å—Ç–æ—Ä—ñ–Ω–∫–∞
 * @param {number} perPage - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω—å –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
 * @returns {Promise<Object>}
 */
export async function searchImages(query, page = 1, perPage = 12) {
    if (!ACCESS_KEY) {
        // –ö–∏–¥–∞—î–º–æ —è–≤–Ω—É –ø–æ–º–∏–ª–∫—É ‚Äî —ó—ó –ø–µ—Ä–µ—Ö–æ–ø–∏—Ç—å App —ñ –ø–æ–∫–∞–∂–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        throw new Error('Unsplash Access Key –≤—ñ–¥—Å—É—Ç–Ω—ñ–π. –ó–∞–ø–æ–≤–Ω–∏ VITE_UNSPLASH_ACCESS_KEY —É .env.local')
    }

    const response = await unsplashApi.get('/search/photos', {
        params: { query, page, per_page: perPage },
        headers: { Authorization: `Client-ID ${ACCESS_KEY}` },
    })

    return response.data
}
